name: Update Live Streamers

on:
  schedule:
    # Run every 2 minutes
    - cron: '*/2 * * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  update-streamers:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout main branch
      uses: actions/checkout@v3
      with:
        ref: main
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Get Twitch Access Token
      id: twitch_auth
      run: |
        RESPONSE=$(curl -s -X POST 'https://id.twitch.tv/oauth2/token' \
          -H 'Content-Type: application/x-www-form-urlencoded' \
          -d "client_id=${{ vars.TWITCH_CLIENT_ID }}&client_secret=${{ secrets.TWITCH_CLIENT_SECRET }}&grant_type=client_credentials")
        
        echo "Response: $RESPONSE"
        ACCESS_TOKEN=$(echo $RESPONSE | jq -r '.access_token')
        echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV
    
    - name: Check Live Streamers
      run: |
        node scripts/check-live-streamers.js
      env:
        TWITCH_CLIENT_ID: ${{ vars.TWITCH_CLIENT_ID }}
        TWITCH_ACCESS_TOKEN: ${{ env.ACCESS_TOKEN }}
    
    - name: Deploy to GitHub Pages
      run: |
        # Configure git
        git config --global user.name "GitHub Action"
        git config --global user.email "action@github.com"
        
        # Create orphan gh-pages branch
        git checkout --orphan gh-pages
        
        # Remove all files except live-streamers.json
        git rm -rf .
        git clean -fxd
        
        # Keep only the JSON file
        cp /tmp/live-streamers.json ./live-streamers.json || echo '{"streamers":[],"updated":"'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"}' > live-streamers.json
        
        # Add CORS headers via _headers file for Netlify-style hosting
        echo "/*
          Access-Control-Allow-Origin: *" > _headers
        
        # Commit and force push
        git add .
        git commit -m "Update live streamers"
        git push origin gh-pages --force